<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>